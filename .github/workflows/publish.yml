name: Zip and Upload to Chrome Web Store

on:
  workflow_dispatch:  # Allows manual triggering
  push:
    paths:
      - src/manifest.json

jobs:
  upload-zip:
    runs-on: ubuntu-latest

    env:
      ZIP_FILE: src.zip

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Zip Source Directory Contents
      run: |
        cd src
        zip -r ../${{ env.ZIP_FILE }} .
        cd ..

    - name: Get Access Token
      id: get-token
      run: |
        response=$(curl -s --fail "https://oauth2.googleapis.com/token" \
          -d "client_secret=${{ secrets.CLIENT_SECRET }}" \
          -d "grant_type=refresh_token" \
          -d "refresh_token=${{ secrets.REFRESH_TOKEN }}" \
          -d "client_id=${{ secrets.CLIENT_ID }}")
        
        if [ -z "$response" ]; then
          echo "Failed to get a response from the OAuth server"
          exit 1
        fi

        access_token=$(echo "$response" | jk parse -a '.access_token')

        if [ -z "$access_token" ]; then
          echo "Failed to extract access_token from the response"
          echo "Response: $response"
          exit 1
        fi
        
        echo "token=$access_token" >> $GITHUB_ENV

    - name: Upload Zip to Chrome Web Store
      env:
        TOKEN: ${{ env.token }}
        EXTENSION_ID: ${{ secrets.CHROME_EXTENSION_ID }}
        ZIP_FILE: ${{ env.ZIP_FILE }}
      run: |
        curl -s --fail \
          -H "Authorization: Bearer $TOKEN" \
          -H "x-goog-api-version: 2" \
          -X PUT -T $ZIP_FILE \
          "https://www.googleapis.com/upload/chromewebstore/v1.1/items/$EXTENSION_ID"
        echo "Upload successful."

    - name: Publish Extension
      env:
        TOKEN: ${{ env.token }}
        EXTENSION_ID: ${{ secrets.CHROME_EXTENSION_ID }}
      run: |
        curl -s --fail \
          -H "Authorization: Bearer $TOKEN" \
          -H "x-goog-api-version: 2" \
          -H "Content-Length: 0" \
          -X POST \
          "https://www.googleapis.com/chromewebstore/v1.1/items/$EXTENSION_ID/publish"
        echo "Publish successful."
